#include "LHCA.h"

static ucharP ZEDbitTableBackwardCaseOneFalse;
static ucharP ZEDbitTableBackwardCaseOneTrue;
static ucharP ZEDbitTableBackwardCaseTwoFalseFalse;
static ucharP ZEDbitTableBackwardCaseTwoFalseTrue;
static ucharP ZEDbitTableBackwardCaseTwoTrueFalse;
static ucharP ZEDbitTableBackwardCaseTwoTrueTrue;
static ucharP ZEDbyteTableBackwardCaseOneFalse;
static ucharP ZEDbyteTableBackwardCaseOneTrue;
static ucharP ZEDbyteTableBackwardCaseTwoFalseFalse;
static ucharP ZEDbyteTableBackwardCaseTwoFalseTrue;
static ucharP ZEDbyteTableBackwardCaseTwoTrueFalse;
static ucharP ZEDbyteTableBackwardCaseTwoTrueTrue;
static ucharP ZEDbyteTableForwardCaseOneFalse;
static ucharP ZEDbyteTableForwardCaseOneTrue;
static ucharP ZEDbyteTableForwardCaseTwoFalseFalse;
static ucharP ZEDbyteTableForwardCaseTwoFalseTrue;
static ucharP ZEDbyteTableForwardCaseTwoTrueFalse;
static ucharP ZEDbyteTableForwardCaseTwoTrueTrue;
static ucharP ZEDstate;
static uchar ZEDassertInitialized=0;

static uchar bitBack(uchar bit0 , uchar bit1 , uchar byte);
static uchar bitBackwardCaseOneFalse(uchar byte);
static uchar bitBackwardCaseOneTrue(uchar byte);
static uchar bitBackwardCaseTwoFalseFalse(uchar byte);
static uchar bitBackwardCaseTwoFalseTrue(uchar byte);
static uchar bitBackwardCaseTwoTrueFalse(uchar byte);
static uchar bitBackwardCaseTwoTrueTrue(uchar byte);
static uchar byteBack(uchar bit0 , uchar bit1 , uchar byte);
static uchar byteBackwardCaseOneFalse(uchar byte);
static uchar byteBackwardCaseOneTrue(uchar byte);
static uchar byteBackwardCaseTwoFalseFalse(uchar byte);
static uchar byteBackwardCaseTwoFalseTrue(uchar byte);
static uchar byteBackwardCaseTwoTrueFalse(uchar byte);
static uchar byteBackwardCaseTwoTrueTrue(uchar byte);
static uchar byteForwardCaseOneFalse(uchar byte);
static uchar byteForwardCaseOneTrue(uchar byte);
static uchar byteForwardCaseTwoFalseFalse(uchar byte);
static uchar byteForwardCaseTwoFalseTrue(uchar byte);
static uchar byteForwardCaseTwoTrueFalse(uchar byte);
static uchar byteForwardCaseTwoTrueTrue(uchar byte);
static ucharP ucharArrayMap(uchar (*function)(ZEDuchar),ulonglong count,ucharP array);
static uchar lhcaBackward(ucharP state);
static uchar lhcaForward(ucharP state);
static uchar lhcaInitialize();
static uchar lhcaOne();
static uchar lhcaTwo();
static uchar lhcaThree();
static uchar lhcaFour();
static uchar lhcaFive();
static uchar lhcaSix();
static uchar lhcaSeven();
static uchar lhcaEight();
static ulonglong ulonglongCastUchar(uchar character);

static ZEDuchar ZEDbitBack(ZEDuchar ZEDbit0 , ZEDuchar ZEDbit1 , ZEDuchar ZEDbyte);static ZEDuchar ZEDbitBackwardCaseOneFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbitBackwardCaseOneTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbitBackwardCaseTwoFalseFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbitBackwardCaseTwoFalseTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbitBackwardCaseTwoTrueFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbitBackwardCaseTwoTrueTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbitRule(ZEDuchar ZEDrule , ZEDuchar ZEDone , ZEDuchar ZEDtwo , ZEDuchar ZEDthree);static ZEDuchar ZEDbitRuleNinety(ZEDuchar ZEDone , ZEDuchar ZEDtwo , ZEDuchar ZEDthree);static ZEDuchar ZEDbitRuleOneFifty(ZEDuchar ZEDone , ZEDuchar ZEDtwo , ZEDuchar ZEDthree);static ZEDuchar ZEDbitXor(ZEDuchar ZEDone , ZEDuchar ZEDtwo);static ZEDucharP ZEDbitsBackwardCaseOne(ZEDuchar ZEDbit , ZEDucharP ZEDbits);static ZEDucharP ZEDbitsBackwardCaseOne1(ZEDuchar ZEDbit , ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseOne1a(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseOne1b(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseOne1c(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseOne1d(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseOne1e(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseOne1f(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseOne1g(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseOneFalse();static ZEDucharP ZEDbitsBackwardCaseOneTrue();static ZEDucharP ZEDbitsBackwardCaseTwo(ZEDuchar ZEDbit1 , ZEDuchar ZEDbit2 , ZEDucharP ZEDbits);static ZEDucharP ZEDbitsBackwardCaseTwo1(ZEDuchar ZEDbit1 , ZEDuchar ZEDbit2 , ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseTwo1a(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseTwo1b(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseTwo1c(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseTwo1d(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseTwo1e(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseTwo1f(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseTwo1g(ZEDucharP ZEDinput , ZEDucharP ZEDoutput);static ZEDucharP ZEDbitsBackwardCaseTwoFalseFalse();static ZEDucharP ZEDbitsBackwardCaseTwoFalseTrue();static ZEDucharP ZEDbitsBackwardCaseTwoTrueFalse();static ZEDucharP ZEDbitsBackwardCaseTwoTrueTrue();static ZEDucharP ZEDbitsByte(ZEDuchar ZEDbyte);static ZEDucharP ZEDbitsByte1(ZEDuchar ZEDbyte , ZEDuchar ZEDcount);static ZEDucharP ZEDbitsForwardCaseOne(ZEDuchar ZEDleftBit , ZEDuchar ZEDrightBit , ZEDucharP ZEDbits);static ZEDucharP ZEDbitsForwardCaseTwo(ZEDuchar ZEDleftBit , ZEDuchar ZEDrightBit , ZEDucharP ZEDbits);static ZEDuchar ZEDbyteBack(ZEDuchar ZEDbit0 , ZEDuchar ZEDbit1 , ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteBackwardCaseOneFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteBackwardCaseOneTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteBackwardCaseTwoFalseFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteBackwardCaseTwoFalseTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteBackwardCaseTwoTrueFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteBackwardCaseTwoTrueTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteBits(ZEDucharP ZEDbits);static ZEDuchar ZEDbyteBits1(ZEDucharP ZEDbits , ZEDuchar ZEDbyte , ZEDuchar ZEDcount);static ZEDuchar ZEDbyteEightForward();static ZEDuchar ZEDbyteEightRef();static ZEDucharP ZEDbyteEightSet(ZEDuchar ZEDcharacter);static ZEDuchar ZEDbyteFiveForward();static ZEDuchar ZEDbyteFiveRef();static ZEDucharP ZEDbyteFiveSet(ZEDuchar ZEDcharacter);static ZEDuchar ZEDbyteForwardCaseOneFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteForwardCaseOneTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteForwardCaseTwoFalseFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteForwardCaseTwoFalseTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteForwardCaseTwoTrueFalse(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteForwardCaseTwoTrueTrue(ZEDuchar ZEDbyte);static ZEDuchar ZEDbyteFourForward();static ZEDuchar ZEDbyteFourRef();static ZEDucharP ZEDbyteFourSet(ZEDuchar ZEDcharacter);static ZEDuchar ZEDbyteOneForward();static ZEDuchar ZEDbyteOneForward1(ZEDuchar ZEDone , ZEDuchar ZEDtwo);static ZEDuchar ZEDbyteOneRef();static ZEDucharP ZEDbyteOneSet(ZEDuchar ZEDcharacter);static ZEDuchar ZEDbyteSevenForward();static ZEDuchar ZEDbyteSevenRef();static ZEDucharP ZEDbyteSevenSet(ZEDuchar ZEDcharacter);static ZEDuchar ZEDbyteSixForward();static ZEDuchar ZEDbyteSixRef();static ZEDucharP ZEDbyteSixSet(ZEDuchar ZEDcharacter);static ZEDuchar ZEDbyteThreeForward();static ZEDuchar ZEDbyteThreeRef();static ZEDucharP ZEDbyteThreeSet(ZEDuchar ZEDcharacter);static ZEDuchar ZEDbyteTwoForward();static ZEDuchar ZEDbyteTwoForward1(ZEDuchar ZEDone , ZEDuchar ZEDtwo , ZEDuchar ZEDthree);static ZEDuchar ZEDbyteTwoRef();static ZEDucharP ZEDbyteTwoSet(ZEDuchar ZEDcharacter);static ZEDucharP ZEDbytesBackwardCaseOneFalse();static ZEDucharP ZEDbytesBackwardCaseOneTrue();static ZEDucharP ZEDbytesBackwardCaseTwoFalseFalse();static ZEDucharP ZEDbytesBackwardCaseTwoFalseTrue();static ZEDucharP ZEDbytesBackwardCaseTwoTrueFalse();static ZEDucharP ZEDbytesBackwardCaseTwoTrueTrue();static ZEDucharP ZEDbytesForwardCaseOneFalse();static ZEDucharP ZEDbytesForwardCaseOneTrue();static ZEDucharP ZEDbytesForwardCaseTwoFalseFalse();static ZEDucharP ZEDbytesForwardCaseTwoFalseTrue();static ZEDucharP ZEDbytesForwardCaseTwoTrueFalse();static ZEDucharP ZEDbytesForwardCaseTwoTrueTrue();static ZEDucharP ZEDbytesState();static ZEDuchar ZEDucharAdd(ZEDuchar ZEDone , ZEDuchar ZEDtwo);static ZEDucharP ZEDucharArrayNew(ZEDulonglong ZEDsize);static ZEDucharP ZEDucharArrayPrepare(ZEDulonglong ZEDsize , ZEDucharP ZEDarray);static ZEDuchar ZEDucharArrayRef(ZEDulonglong ZEDindex , ZEDucharP ZEDarray);static ZEDucharP ZEDucharArraySet(ZEDulonglong ZEDindex , ZEDuchar ZEDcharacter , ZEDucharP ZEDarray);static ZEDuchar ZEDucharShiftLeft(ZEDuchar ZEDcharacter);static ZEDuchar ZEDucharTableBackward(ZEDuchar ZEDbyte , ZEDucharP ZEDtable);static ZEDulonglong ZEDulonglongAdd(ZEDulonglong ZEDone , ZEDulonglong ZEDtwo);static ZEDulonglong ZEDulonglongCastUchar(ZEDuchar ZEDcharacter);

static ZEDuchar ZEDbitBack(ZEDuchar ZEDbit0 , ZEDuchar ZEDbit1 , ZEDuchar ZEDbyte){return(1)?(bitBack(ZEDbit0,ZEDbit1,ZEDbyte)):(0);}static ZEDuchar ZEDbitBackwardCaseOneFalse(ZEDuchar ZEDbyte){return(1)?(bitBackwardCaseOneFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbitBackwardCaseOneTrue(ZEDuchar ZEDbyte){return(1)?(bitBackwardCaseOneTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbitBackwardCaseTwoFalseFalse(ZEDuchar ZEDbyte){return(1)?(bitBackwardCaseTwoFalseFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbitBackwardCaseTwoFalseTrue(ZEDuchar ZEDbyte){return(1)?(bitBackwardCaseTwoFalseTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbitBackwardCaseTwoTrueFalse(ZEDuchar ZEDbyte){return(1)?(bitBackwardCaseTwoTrueFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbitBackwardCaseTwoTrueTrue(ZEDuchar ZEDbyte){return(1)?(bitBackwardCaseTwoTrueTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbitRule(ZEDuchar ZEDrule , ZEDuchar ZEDone , ZEDuchar ZEDtwo , ZEDuchar ZEDthree){return(ZEDrule)?(ZEDbitRuleOneFifty(ZEDone,ZEDtwo,ZEDthree)):((1)?(ZEDbitRuleNinety(ZEDone,ZEDtwo,ZEDthree)):(0));}static ZEDuchar ZEDbitRuleNinety(ZEDuchar ZEDone , ZEDuchar ZEDtwo , ZEDuchar ZEDthree){return(1)?(ZEDbitXor(ZEDone,ZEDthree)):(0);}static ZEDuchar ZEDbitRuleOneFifty(ZEDuchar ZEDone , ZEDuchar ZEDtwo , ZEDuchar ZEDthree){return(1)?(ZEDbitXor(ZEDtwo,ZEDbitXor(ZEDone,ZEDthree))):(0);}static ZEDuchar ZEDbitXor(ZEDuchar ZEDone , ZEDuchar ZEDtwo){return(1)?(ZEDone!=ZEDtwo):(0);}static ZEDucharP ZEDbitsBackwardCaseOne(ZEDuchar ZEDbit , ZEDucharP ZEDbits){return(1)?(ZEDbitsBackwardCaseOne1(ZEDbit,ZEDbits,ZEDucharArrayNew(9))):(0);}static ZEDucharP ZEDbitsBackwardCaseOne1(ZEDuchar ZEDbit , ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseOne1a(ZEDinput,ZEDucharArraySet(1,ZEDbit,ZEDucharArraySet(2,ZEDbitRule(0,0,ZEDbit,ZEDucharArrayRef(1,ZEDinput)),ZEDoutput)))):(0);}static ZEDucharP ZEDbitsBackwardCaseOne1a(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseOne1b(ZEDinput,ZEDucharArraySet(3,ZEDbitRule(0,ZEDucharArrayRef(1,ZEDoutput),ZEDucharArrayRef(2,ZEDoutput),ZEDucharArrayRef(2,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseOne1b(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseOne1c(ZEDinput,ZEDucharArraySet(4,ZEDbitRule(1,ZEDucharArrayRef(2,ZEDoutput),ZEDucharArrayRef(3,ZEDoutput),ZEDucharArrayRef(3,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseOne1c(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseOne1d(ZEDinput,ZEDucharArraySet(5,ZEDbitRule(0,ZEDucharArrayRef(3,ZEDoutput),ZEDucharArrayRef(4,ZEDoutput),ZEDucharArrayRef(4,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseOne1d(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseOne1e(ZEDinput,ZEDucharArraySet(6,ZEDbitRule(1,ZEDucharArrayRef(4,ZEDoutput),ZEDucharArrayRef(5,ZEDoutput),ZEDucharArrayRef(5,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseOne1e(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseOne1f(ZEDinput,ZEDucharArraySet(7,ZEDbitRule(0,ZEDucharArrayRef(5,ZEDoutput),ZEDucharArrayRef(6,ZEDoutput),ZEDucharArrayRef(6,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseOne1f(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseOne1g(ZEDinput,ZEDucharArraySet(8,ZEDbitRule(0,ZEDucharArrayRef(6,ZEDoutput),ZEDucharArrayRef(7,ZEDoutput),ZEDucharArrayRef(7,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseOne1g(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDucharArraySet(9,ZEDbitRule(0,ZEDucharArrayRef(7,ZEDoutput),ZEDucharArrayRef(8,ZEDoutput),ZEDucharArrayRef(8,ZEDinput)),ZEDoutput)):(0);}static ZEDucharP ZEDbitsBackwardCaseOneFalse(){return(1)?(ucharArrayMap(&ZEDbitBackwardCaseOneFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbitsBackwardCaseOneTrue(){return(1)?(ucharArrayMap(&ZEDbitBackwardCaseOneTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo(ZEDuchar ZEDbit1 , ZEDuchar ZEDbit2 , ZEDucharP ZEDbits){return(1)?(ZEDbitsBackwardCaseTwo1(ZEDbit1,ZEDbit2,ZEDbits,ZEDucharArrayNew(9))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo1(ZEDuchar ZEDbit1 , ZEDuchar ZEDbit2 , ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseTwo1a(ZEDinput,ZEDucharArraySet(1,ZEDbit2,ZEDucharArraySet(2,ZEDbitRule(0,ZEDbit1,ZEDbit2,ZEDucharArrayRef(1,ZEDinput)),ZEDoutput)))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo1a(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseTwo1b(ZEDinput,ZEDucharArraySet(3,ZEDbitRule(0,ZEDucharArrayRef(1,ZEDoutput),ZEDucharArrayRef(2,ZEDoutput),ZEDucharArrayRef(2,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo1b(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseTwo1c(ZEDinput,ZEDucharArraySet(4,ZEDbitRule(0,ZEDucharArrayRef(2,ZEDoutput),ZEDucharArrayRef(3,ZEDoutput),ZEDucharArrayRef(3,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo1c(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseTwo1d(ZEDinput,ZEDucharArraySet(5,ZEDbitRule(0,ZEDucharArrayRef(3,ZEDoutput),ZEDucharArrayRef(4,ZEDoutput),ZEDucharArrayRef(4,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo1d(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseTwo1e(ZEDinput,ZEDucharArraySet(6,ZEDbitRule(0,ZEDucharArrayRef(4,ZEDoutput),ZEDucharArrayRef(5,ZEDoutput),ZEDucharArrayRef(5,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo1e(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseTwo1f(ZEDinput,ZEDucharArraySet(7,ZEDbitRule(0,ZEDucharArrayRef(5,ZEDoutput),ZEDucharArrayRef(6,ZEDoutput),ZEDucharArrayRef(6,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo1f(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDbitsBackwardCaseTwo1g(ZEDinput,ZEDucharArraySet(8,ZEDbitRule(0,ZEDucharArrayRef(6,ZEDoutput),ZEDucharArrayRef(7,ZEDoutput),ZEDucharArrayRef(7,ZEDinput)),ZEDoutput))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwo1g(ZEDucharP ZEDinput , ZEDucharP ZEDoutput){return(1)?(ZEDucharArraySet(9,ZEDbitRule(0,ZEDucharArrayRef(7,ZEDoutput),ZEDucharArrayRef(8,ZEDoutput),ZEDucharArrayRef(8,ZEDinput)),ZEDoutput)):(0);}static ZEDucharP ZEDbitsBackwardCaseTwoFalseFalse(){return(1)?(ucharArrayMap(&ZEDbitBackwardCaseTwoFalseFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwoFalseTrue(){return(1)?(ucharArrayMap(&ZEDbitBackwardCaseTwoFalseTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwoTrueFalse(){return(1)?(ucharArrayMap(&ZEDbitBackwardCaseTwoTrueFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbitsBackwardCaseTwoTrueTrue(){return(1)?(ucharArrayMap(&ZEDbitBackwardCaseTwoTrueTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbitsByte(ZEDuchar ZEDbyte){return(1)?(ZEDbitsByte1(ZEDbyte,1)):(0);}static ZEDucharP ZEDbitsByte1(ZEDuchar ZEDbyte , ZEDuchar ZEDcount){return(ZEDcount>8)?(ZEDucharArrayNew(8)):((ZEDbyte>127)?(ZEDucharArraySet(ZEDcount,1,ZEDbitsByte1(ZEDbyte<<1,ZEDcount+1))):((1)?(ZEDucharArraySet(ZEDcount,0,ZEDbitsByte1(ZEDbyte<<1,ZEDcount+1))):(0)));}static ZEDucharP ZEDbitsForwardCaseOne(ZEDuchar ZEDleftBit , ZEDuchar ZEDrightBit , ZEDucharP ZEDbits){return(1)?(ZEDucharArraySet(1,ZEDbitRule(0,ZEDleftBit,ZEDucharArrayRef(1,ZEDbits),ZEDucharArrayRef(2,ZEDbits)),ZEDucharArraySet(2,ZEDbitRule(0,ZEDucharArrayRef(1,ZEDbits),ZEDucharArrayRef(2,ZEDbits),ZEDucharArrayRef(3,ZEDbits)),ZEDucharArraySet(3,ZEDbitRule(1,ZEDucharArrayRef(2,ZEDbits),ZEDucharArrayRef(3,ZEDbits),ZEDucharArrayRef(4,ZEDbits)),ZEDucharArraySet(4,ZEDbitRule(0,ZEDucharArrayRef(3,ZEDbits),ZEDucharArrayRef(4,ZEDbits),ZEDucharArrayRef(5,ZEDbits)),ZEDucharArraySet(5,ZEDbitRule(1,ZEDucharArrayRef(4,ZEDbits),ZEDucharArrayRef(5,ZEDbits),ZEDucharArrayRef(6,ZEDbits)),ZEDucharArraySet(6,ZEDbitRule(0,ZEDucharArrayRef(5,ZEDbits),ZEDucharArrayRef(6,ZEDbits),ZEDucharArrayRef(7,ZEDbits)),ZEDucharArraySet(7,ZEDbitRule(0,ZEDucharArrayRef(6,ZEDbits),ZEDucharArrayRef(7,ZEDbits),ZEDucharArrayRef(8,ZEDbits)),ZEDucharArraySet(8,ZEDbitRule(0,ZEDucharArrayRef(7,ZEDbits),ZEDucharArrayRef(8,ZEDbits),ZEDrightBit),ZEDucharArrayNew(8)))))))))):(0);}static ZEDucharP ZEDbitsForwardCaseTwo(ZEDuchar ZEDleftBit , ZEDuchar ZEDrightBit , ZEDucharP ZEDbits){return(1)?(ZEDucharArraySet(1,ZEDbitRule(0,ZEDleftBit,ZEDucharArrayRef(1,ZEDbits),ZEDucharArrayRef(2,ZEDbits)),ZEDucharArraySet(2,ZEDbitRule(0,ZEDucharArrayRef(1,ZEDbits),ZEDucharArrayRef(2,ZEDbits),ZEDucharArrayRef(3,ZEDbits)),ZEDucharArraySet(3,ZEDbitRule(0,ZEDucharArrayRef(2,ZEDbits),ZEDucharArrayRef(3,ZEDbits),ZEDucharArrayRef(4,ZEDbits)),ZEDucharArraySet(4,ZEDbitRule(0,ZEDucharArrayRef(3,ZEDbits),ZEDucharArrayRef(4,ZEDbits),ZEDucharArrayRef(5,ZEDbits)),ZEDucharArraySet(5,ZEDbitRule(0,ZEDucharArrayRef(4,ZEDbits),ZEDucharArrayRef(5,ZEDbits),ZEDucharArrayRef(6,ZEDbits)),ZEDucharArraySet(6,ZEDbitRule(0,ZEDucharArrayRef(5,ZEDbits),ZEDucharArrayRef(6,ZEDbits),ZEDucharArrayRef(7,ZEDbits)),ZEDucharArraySet(7,ZEDbitRule(0,ZEDucharArrayRef(6,ZEDbits),ZEDucharArrayRef(7,ZEDbits),ZEDucharArrayRef(8,ZEDbits)),ZEDucharArraySet(8,ZEDbitRule(0,ZEDucharArrayRef(7,ZEDbits),ZEDucharArrayRef(8,ZEDbits),ZEDrightBit),ZEDucharArrayNew(8)))))))))):(0);}static ZEDuchar ZEDbyteBack(ZEDuchar ZEDbit0 , ZEDuchar ZEDbit1 , ZEDuchar ZEDbyte){return(1)?(byteBack(ZEDbit0,ZEDbit1,ZEDbyte)):(0);}static ZEDuchar ZEDbyteBackwardCaseOneFalse(ZEDuchar ZEDbyte){return(1)?(byteBackwardCaseOneFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbyteBackwardCaseOneTrue(ZEDuchar ZEDbyte){return(1)?(byteBackwardCaseOneTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbyteBackwardCaseTwoFalseFalse(ZEDuchar ZEDbyte){return(1)?(byteBackwardCaseTwoFalseFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbyteBackwardCaseTwoFalseTrue(ZEDuchar ZEDbyte){return(1)?(byteBackwardCaseTwoFalseTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbyteBackwardCaseTwoTrueFalse(ZEDuchar ZEDbyte){return(1)?(byteBackwardCaseTwoTrueFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbyteBackwardCaseTwoTrueTrue(ZEDuchar ZEDbyte){return(1)?(byteBackwardCaseTwoTrueTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbyteBits(ZEDucharP ZEDbits){return(1)?(ZEDbyteBits1(ZEDbits,0,1)):(0);}static ZEDuchar ZEDbyteBits1(ZEDucharP ZEDbits , ZEDuchar ZEDbyte , ZEDuchar ZEDcount){return(ZEDcount==8)?(ZEDucharAdd(ZEDbyte,ZEDucharArrayRef(ZEDcount,ZEDbits))):((1)?(ZEDbyteBits1(ZEDbits,ZEDucharShiftLeft(ZEDucharAdd(ZEDbyte,ZEDucharArrayRef(ZEDcount,ZEDbits))),ZEDcount+1)):(0));}static ZEDuchar ZEDbyteEightForward(){return(1)?(ZEDbyteTwoForward1(ZEDbyteSevenRef(),ZEDbyteEightRef(),0)):(0);}static ZEDuchar ZEDbyteEightRef(){return(1)?(ZEDucharArrayRef(8,ZEDstate)):(0);}static ZEDucharP ZEDbyteEightSet(ZEDuchar ZEDcharacter){return(1)?(ZEDucharArraySet(8,ZEDcharacter,ZEDstate)):(0);}static ZEDuchar ZEDbyteFiveForward(){return(1)?(ZEDbyteTwoForward1(ZEDbyteFourRef(),ZEDbyteFiveRef(),ZEDbyteSixRef())):(0);}static ZEDuchar ZEDbyteFiveRef(){return(1)?(ZEDucharArrayRef(5,ZEDstate)):(0);}static ZEDucharP ZEDbyteFiveSet(ZEDuchar ZEDcharacter){return(1)?(ZEDucharArraySet(5,ZEDcharacter,ZEDstate)):(0);}static ZEDuchar ZEDbyteForwardCaseOneFalse(ZEDuchar ZEDbyte){return(1)?(byteForwardCaseOneFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbyteForwardCaseOneTrue(ZEDuchar ZEDbyte){return(1)?(byteForwardCaseOneTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbyteForwardCaseTwoFalseFalse(ZEDuchar ZEDbyte){return(1)?(byteForwardCaseTwoFalseFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbyteForwardCaseTwoFalseTrue(ZEDuchar ZEDbyte){return(1)?(byteForwardCaseTwoFalseTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbyteForwardCaseTwoTrueFalse(ZEDuchar ZEDbyte){return(1)?(byteForwardCaseTwoTrueFalse(ZEDbyte)):(0);}static ZEDuchar ZEDbyteForwardCaseTwoTrueTrue(ZEDuchar ZEDbyte){return(1)?(byteForwardCaseTwoTrueTrue(ZEDbyte)):(0);}static ZEDuchar ZEDbyteFourForward(){return(1)?(ZEDbyteTwoForward1(ZEDbyteThreeRef(),ZEDbyteFourRef(),ZEDbyteFiveRef())):(0);}static ZEDuchar ZEDbyteFourRef(){return(1)?(ZEDucharArrayRef(4,ZEDstate)):(0);}static ZEDucharP ZEDbyteFourSet(ZEDuchar ZEDcharacter){return(1)?(ZEDucharArraySet(4,ZEDcharacter,ZEDstate)):(0);}static ZEDuchar ZEDbyteOneForward(){return(1)?(ZEDbyteOneForward1(ZEDbyteOneRef(),ZEDbyteTwoRef())):(0);}static ZEDuchar ZEDbyteOneForward1(ZEDuchar ZEDone , ZEDuchar ZEDtwo){return(ZEDtwo>127)?(ZEDucharArrayRef(ZEDone+1,ZEDbyteTableForwardCaseOneTrue)):((1)?(ZEDucharArrayRef(ZEDone+1,ZEDbyteTableForwardCaseOneFalse)):(0));}static ZEDuchar ZEDbyteOneRef(){return(1)?(ZEDucharArrayRef(1,ZEDstate)):(0);}static ZEDucharP ZEDbyteOneSet(ZEDuchar ZEDcharacter){return(1)?(ZEDucharArraySet(1,ZEDcharacter,ZEDstate)):(0);}static ZEDuchar ZEDbyteSevenForward(){return(1)?(ZEDbyteTwoForward1(ZEDbyteSixRef(),ZEDbyteSevenRef(),ZEDbyteEightRef())):(0);}static ZEDuchar ZEDbyteSevenRef(){return(1)?(ZEDucharArrayRef(7,ZEDstate)):(0);}static ZEDucharP ZEDbyteSevenSet(ZEDuchar ZEDcharacter){return(1)?(ZEDucharArraySet(7,ZEDcharacter,ZEDstate)):(0);}static ZEDuchar ZEDbyteSixForward(){return(1)?(ZEDbyteTwoForward1(ZEDbyteFiveRef(),ZEDbyteSixRef(),ZEDbyteSevenRef())):(0);}static ZEDuchar ZEDbyteSixRef(){return(1)?(ZEDucharArrayRef(6,ZEDstate)):(0);}static ZEDucharP ZEDbyteSixSet(ZEDuchar ZEDcharacter){return(1)?(ZEDucharArraySet(6,ZEDcharacter,ZEDstate)):(0);}static ZEDuchar ZEDbyteThreeForward(){return(1)?(ZEDbyteTwoForward1(ZEDbyteTwoRef(),ZEDbyteThreeRef(),ZEDbyteFourRef())):(0);}static ZEDuchar ZEDbyteThreeRef(){return(1)?(ZEDucharArrayRef(3,ZEDstate)):(0);}static ZEDucharP ZEDbyteThreeSet(ZEDuchar ZEDcharacter){return(1)?(ZEDucharArraySet(3,ZEDcharacter,ZEDstate)):(0);}static ZEDuchar ZEDbyteTwoForward(){return(1)?(ZEDbyteTwoForward1(ZEDbyteOneRef(),ZEDbyteTwoRef(),ZEDbyteThreeRef())):(0);}static ZEDuchar ZEDbyteTwoForward1(ZEDuchar ZEDone , ZEDuchar ZEDtwo , ZEDuchar ZEDthree){return(ZEDone%2&&ZEDthree>127)?(ZEDucharArrayRef(ZEDtwo+1,ZEDbyteTableForwardCaseTwoTrueTrue)):((ZEDthree>127)?(ZEDucharArrayRef(ZEDtwo+1,ZEDbyteTableForwardCaseTwoFalseTrue)):((ZEDone%2==1)?(ZEDucharArrayRef(ZEDtwo+1,ZEDbyteTableForwardCaseTwoTrueFalse)):((1)?(ZEDucharArrayRef(ZEDtwo+1,ZEDbyteTableForwardCaseTwoFalseFalse)):(0))));}static ZEDuchar ZEDbyteTwoRef(){return(1)?(ZEDucharArrayRef(2,ZEDstate)):(0);}static ZEDucharP ZEDbyteTwoSet(ZEDuchar ZEDcharacter){return(1)?(ZEDucharArraySet(2,ZEDcharacter,ZEDstate)):(0);}static ZEDucharP ZEDbytesBackwardCaseOneFalse(){return(1)?(ucharArrayMap(&ZEDbyteBackwardCaseOneFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesBackwardCaseOneTrue(){return(1)?(ucharArrayMap(&ZEDbyteBackwardCaseOneTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesBackwardCaseTwoFalseFalse(){return(1)?(ucharArrayMap(&ZEDbyteBackwardCaseTwoFalseFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesBackwardCaseTwoFalseTrue(){return(1)?(ucharArrayMap(&ZEDbyteBackwardCaseTwoFalseTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesBackwardCaseTwoTrueFalse(){return(1)?(ucharArrayMap(&ZEDbyteBackwardCaseTwoTrueFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesBackwardCaseTwoTrueTrue(){return(1)?(ucharArrayMap(&ZEDbyteBackwardCaseTwoTrueTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesForwardCaseOneFalse(){return(1)?(ucharArrayMap(&ZEDbyteForwardCaseOneFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesForwardCaseOneTrue(){return(1)?(ucharArrayMap(&ZEDbyteForwardCaseOneTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesForwardCaseTwoFalseFalse(){return(1)?(ucharArrayMap(&ZEDbyteForwardCaseTwoFalseFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesForwardCaseTwoFalseTrue(){return(1)?(ucharArrayMap(&ZEDbyteForwardCaseTwoFalseTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesForwardCaseTwoTrueFalse(){return(1)?(ucharArrayMap(&ZEDbyteForwardCaseTwoTrueFalse,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesForwardCaseTwoTrueTrue(){return(1)?(ucharArrayMap(&ZEDbyteForwardCaseTwoTrueTrue,256,ZEDucharArrayPrepare(256,ZEDucharArrayNew(256)))):(0);}static ZEDucharP ZEDbytesState(){return(1)?(ZEDucharArraySet(1,49,ZEDucharArraySet(2,50,ZEDucharArraySet(3,50,ZEDucharArraySet(4,55,ZEDucharArraySet(5,49,ZEDucharArraySet(6,57,ZEDucharArraySet(7,55,ZEDucharArraySet(8,54,ZEDucharArrayNew(8)))))))))):(0);}static ZEDuchar ZEDucharAdd(ZEDuchar ZEDone , ZEDuchar ZEDtwo){return(1)?(ZEDone+ZEDtwo):(0);}static ZEDucharP ZEDucharArrayNew(ZEDulonglong ZEDsize){return(1)?(ucharArrayNew(ZEDsize)):(0);}static ZEDucharP ZEDucharArrayPrepare(ZEDulonglong ZEDsize , ZEDucharP ZEDarray){return(ZEDsize==0)?(ZEDarray):((1)?(ZEDucharArrayPrepare(ZEDsize-1,ZEDucharArraySet(ZEDsize,ZEDsize-1,ZEDarray))):(0));}static ZEDuchar ZEDucharArrayRef(ZEDulonglong ZEDindex , ZEDucharP ZEDarray){return(1)?(ucharArrayRef(ZEDindex,ZEDarray)):(0);}static ZEDucharP ZEDucharArraySet(ZEDulonglong ZEDindex , ZEDuchar ZEDcharacter , ZEDucharP ZEDarray){return(1)?(ucharArraySet(ZEDindex,ZEDcharacter,ZEDarray)):(0);}static ZEDuchar ZEDucharShiftLeft(ZEDuchar ZEDcharacter){return(1)?(ZEDcharacter<<1):(0);}static ZEDuchar ZEDucharTableBackward(ZEDuchar ZEDbyte , ZEDucharP ZEDtable){return(1)?(ZEDucharArrayRef(ZEDulonglongAdd(1,ZEDulonglongCastUchar(ZEDbyte)),ZEDtable)):(0);}static ZEDulonglong ZEDulonglongAdd(ZEDulonglong ZEDone , ZEDulonglong ZEDtwo){return(1)?(ZEDone+ZEDtwo):(0);}static ZEDulonglong ZEDulonglongCastUchar(ZEDuchar ZEDcharacter){return(1)?(ulonglongCastUchar(ZEDcharacter)):(0);}

static uchar bitBack(uchar bit0 , uchar bit1 , uchar byte){return(bit0)?((bit1)?(ZEDucharTableBackward(byte,ZEDbitTableBackwardCaseTwoTrueTrue)):(ZEDucharTableBackward(byte,ZEDbitTableBackwardCaseTwoTrueFalse))):((bit1)?(ZEDucharTableBackward(byte,ZEDbitTableBackwardCaseTwoFalseTrue)):(ZEDucharTableBackward(byte,ZEDbitTableBackwardCaseTwoFalseFalse)));}
static uchar bitBackwardCaseOneFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseOne(0,before);uchar reult=ZEDucharArrayRef(9,after);free(before);free(after);return reult;}
static uchar bitBackwardCaseOneTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseOne(1,before);uchar reult=ZEDucharArrayRef(9,after);free(before);free(after);return reult;}
static uchar bitBackwardCaseTwoFalseFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseTwo(0,0,before);uchar reult=ZEDucharArrayRef(9,after);free(before);free(after);return reult;}
static uchar bitBackwardCaseTwoFalseTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseTwo(0,1,before);uchar reult=ZEDucharArrayRef(9,after);free(before);free(after);return reult;}
static uchar bitBackwardCaseTwoTrueFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseTwo(1,0,before);uchar reult=ZEDucharArrayRef(9,after);free(before);free(after);return reult;}
static uchar bitBackwardCaseTwoTrueTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseTwo(1,1,before);uchar reult=ZEDucharArrayRef(9,after);free(before);free(after);return reult;}
static uchar byteBack(uchar bit0 , uchar bit1 , uchar byte){return(bit0)?((bit1)?(ZEDucharTableBackward(byte,ZEDbyteTableBackwardCaseTwoTrueTrue)):(ZEDucharTableBackward(byte,ZEDbyteTableBackwardCaseTwoTrueFalse))):((bit1)?(ZEDucharTableBackward(byte,ZEDbyteTableBackwardCaseTwoFalseTrue)):(ZEDucharTableBackward(byte,ZEDbyteTableBackwardCaseTwoFalseFalse)));}
static uchar byteBackwardCaseOneFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseOne(0,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteBackwardCaseOneTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseOne(1,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteBackwardCaseTwoFalseFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseTwo(0,0,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteBackwardCaseTwoFalseTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseTwo(0,1,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteBackwardCaseTwoTrueFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseTwo(1,0,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteBackwardCaseTwoTrueTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsBackwardCaseTwo(1,1,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteForwardCaseOneFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsForwardCaseOne(0,0,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteForwardCaseOneTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsForwardCaseOne(0,1,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteForwardCaseTwoFalseFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsForwardCaseTwo(0,0,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteForwardCaseTwoFalseTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsForwardCaseTwo(0,1,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteForwardCaseTwoTrueFalse(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsForwardCaseTwo(1,0,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static uchar byteForwardCaseTwoTrueTrue(uchar byte){ucharP before=ZEDbitsByte(byte);ucharP after=ZEDbitsForwardCaseTwo(1,1,before);uchar reult=ZEDbyteBits(after);free(before);free(after);return reult;}
static ucharP ucharArrayMap(uchar (*function)(uchar),ulonglong count,ucharP array){if(count==0) return array; else return ucharArrayMap(function,count-1,ucharArraySet(count,(*function)(ucharArrayRef(count,array)),array));}
static uchar lhcaBackward(ucharP state){ZEDstate=state;uchar bit0,bit1,bit2,bit3,bit4,bit5,bit6,bit7,bit8,byte1,byte2,byte3,byte4,byte5,byte6,byte7,byte8,reult;reult=(ZEDstate[0]>127);byte1=ZEDucharArrayRef(1+((ZEDulonglong)ZEDstate[0]),ZEDbyteTableBackwardCaseOneFalse);bit1=ZEDucharArrayRef(1+((ZEDulonglong)ZEDstate[0]),ZEDbitTableBackwardCaseOneFalse);bit0=(byte1%2);byte2=ZEDbyteBack(bit0,bit1,ZEDstate[1]);bit2=ZEDbitBack(bit0,bit1,ZEDstate[1]);bit0=(byte2%2);byte3=ZEDbyteBack(bit0,bit2,ZEDstate[2]);bit3=ZEDbitBack(bit0,bit2,ZEDstate[2]);bit0=(byte3%2);byte4=ZEDbyteBack(bit0,bit3,ZEDstate[3]);bit4=ZEDbitBack(bit0,bit3,ZEDstate[3]);bit0=(byte4%2);byte5=ZEDbyteBack(bit0,bit4,ZEDstate[4]);bit5=ZEDbitBack(bit0,bit4,ZEDstate[4]);bit0=(byte5%2);byte6=ZEDbyteBack(bit0,bit5,ZEDstate[5]);bit6=ZEDbitBack(bit0,bit5,ZEDstate[5]);bit0=(byte6%2);byte7=ZEDbyteBack(bit0,bit6,ZEDstate[6]);bit7=ZEDbitBack(bit0,bit6,ZEDstate[6]);bit0=(byte7%2);byte8=ZEDbyteBack(bit0,bit7,ZEDstate[7]);bit8=ZEDbitBack(bit0,bit7,ZEDstate[7]);if(bit8){byte1=ZEDucharArrayRef(1+((ZEDulonglong)ZEDstate[0]),ZEDbyteTableBackwardCaseOneTrue);bit1=ZEDucharArrayRef(1+((ZEDulonglong)ZEDstate[0]),ZEDbitTableBackwardCaseOneTrue);bit0=(byte1%2);byte2=ZEDbyteBack(bit0,bit1,ZEDstate[1]);bit2=ZEDbitBack(bit0,bit1,ZEDstate[1]);bit0=(byte2%2);byte3=ZEDbyteBack(bit0,bit2,ZEDstate[2]);bit3=ZEDbitBack(bit0,bit2,ZEDstate[2]);bit0=(byte3%2);byte4=ZEDbyteBack(bit0,bit3,ZEDstate[3]);bit4=ZEDbitBack(bit0,bit3,ZEDstate[3]);bit0=(byte4%2);byte5=ZEDbyteBack(bit0,bit4,ZEDstate[4]);bit5=ZEDbitBack(bit0,bit4,ZEDstate[4]);bit0=(byte5%2);byte6=ZEDbyteBack(bit0,bit5,ZEDstate[5]);bit6=ZEDbitBack(bit0,bit5,ZEDstate[5]);bit0=(byte6%2);byte7=ZEDbyteBack(bit0,bit6,ZEDstate[6]);bit7=ZEDbitBack(bit0,bit6,ZEDstate[6]);bit0=(byte7%2);byte8=ZEDbyteBack(bit0,bit7,ZEDstate[7]);bit8=ZEDbitBack(bit0,bit7,ZEDstate[7]);}ZEDstate[0]=byte1;ZEDstate[1]=byte2;ZEDstate[2]=byte3;ZEDstate[3]=byte4;ZEDstate[4]=byte5;ZEDstate[5]=byte6;ZEDstate[6]=byte7;ZEDstate[7]=byte8;return reult;}
static uchar lhcaForward(ucharP state){ZEDstate=state;uchar one=ZEDbyteOneForward();uchar two=ZEDbyteTwoForward();uchar three=ZEDbyteThreeForward();uchar four=ZEDbyteFourForward();uchar five=ZEDbyteFiveForward();uchar six=ZEDbyteSixForward();uchar seven=ZEDbyteSevenForward();uchar eight=ZEDbyteEightForward();ZEDbyteOneSet(one);ZEDbyteTwoSet(two);ZEDbyteThreeSet(three);ZEDbyteFourSet(four);ZEDbyteFiveSet(five);ZEDbyteSixSet(six);ZEDbyteSevenSet(seven);ZEDbyteEightSet(eight);return one>127;}
static uchar lhcaInitialize(){if(ZEDassertInitialized){return 0;}else{ZEDassertInitialized=1;ZEDbitTableBackwardCaseOneFalse=ZEDbitsBackwardCaseOneFalse();ZEDbitTableBackwardCaseOneTrue=ZEDbitsBackwardCaseOneTrue();ZEDbitTableBackwardCaseTwoFalseFalse=ZEDbitsBackwardCaseTwoFalseFalse();ZEDbitTableBackwardCaseTwoFalseTrue=ZEDbitsBackwardCaseTwoFalseTrue();ZEDbitTableBackwardCaseTwoTrueFalse=ZEDbitsBackwardCaseTwoTrueFalse();ZEDbitTableBackwardCaseTwoTrueTrue=ZEDbitsBackwardCaseTwoTrueTrue();ZEDbyteTableBackwardCaseOneFalse=ZEDbytesBackwardCaseOneFalse();ZEDbyteTableBackwardCaseOneTrue=ZEDbytesBackwardCaseOneTrue();ZEDbyteTableBackwardCaseTwoFalseFalse=ZEDbytesBackwardCaseTwoFalseFalse();ZEDbyteTableBackwardCaseTwoFalseTrue=ZEDbytesBackwardCaseTwoFalseTrue();ZEDbyteTableBackwardCaseTwoTrueFalse=ZEDbytesBackwardCaseTwoTrueFalse();ZEDbyteTableBackwardCaseTwoTrueTrue=ZEDbytesBackwardCaseTwoTrueTrue();ZEDbyteTableForwardCaseOneFalse=ZEDbytesForwardCaseOneFalse();ZEDbyteTableForwardCaseOneTrue=ZEDbytesForwardCaseOneTrue();ZEDbyteTableForwardCaseTwoFalseFalse=ZEDbytesForwardCaseTwoFalseFalse();ZEDbyteTableForwardCaseTwoFalseTrue=ZEDbytesForwardCaseTwoFalseTrue();ZEDbyteTableForwardCaseTwoTrueFalse=ZEDbytesForwardCaseTwoTrueFalse();ZEDbyteTableForwardCaseTwoTrueTrue=ZEDbytesForwardCaseTwoTrueTrue();return 0;}}
static uchar lhcaOne(){return ZEDstate[0];}
static uchar lhcaTwo(){return ZEDstate[1];}
static uchar lhcaThree(){return ZEDstate[2];}
static uchar lhcaFour(){return ZEDstate[3];}
static uchar lhcaFive(){return ZEDstate[4];}
static uchar lhcaSix(){return ZEDstate[5];}
static uchar lhcaSeven(){return ZEDstate[6];}
static uchar lhcaEight(){return ZEDstate[7];}
static ulonglong ulonglongCastUchar(uchar character){return(ulonglong)character;}

@implementation LHCA
-(uchar) forward{return lhcaForward(state);}
-(uchar) backward{return lhcaBackward(state);}
-(uchar) initialize{state=ucharArrayNew(8); lhcaInitialize();[self seed:'1':'2':'2':'7':'1':'9':'7':'6'];return 0;}
-(uchar) one{return state[0];}
-(uchar) two{return state[1];}
-(uchar) three{return state[2];}
-(uchar) four{return state[3];}
-(uchar) five{return state[4];}
-(uchar) six{return state[5];}
-(uchar) seven{return state[6];}
-(uchar) eight{return state[7];}
-(uchar) seed: (uchar) one : (uchar) two : (uchar) three : (uchar) four : (uchar) five : (uchar) six : (uchar) seven : (uchar) eight{state[0]=one;state[1]=two;state[2]=three;state[3]=four;state[4]=five;state[5]=six;state[6]=seven;state[7]=eight;return 0;}
@end
